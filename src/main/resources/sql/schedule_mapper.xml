<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mozzle.web.Schedule">

	<!-- 일정리스트 -->
	<select id="scheduleselectAll" parameterType="java.util.Map"
		resultType="ScheduleDto">
		SELECT SCHEDULE_ID ,MOZZLE_ID ,WRITER ,TITLE ,CONTENT
		,SCHEDULE_DATE ,REGDATE
		FROM SCHEDULES s
		WHERE MOZZLE_ID =#{mozzle_id}
		AND SUBSTR(SCHEDULE_DATE,1,8) = #{yyyyMMdd}
		ORDER BY SCHEDULE_DATE
	</select>

	<!-- 일정추가 -->
	<!-- <insert id="scheduleinfoinsert" parameterType="ScheduleLocationInfoDto"> 
		INSERT INTO SCHEDULE_INFO (LOCATION_CODE ,LOCATION_NAME ,ADDRESS ,ADDRESS2 
		,PHONE ,LOGUI ,LAT) VALUES(SCHEDULE_INFO_SEQ.NEXTVAL,#{location_name},#{address},#{address2},#{phone},#{logui},#{lat}) 
		</insert> -->
	<insert id="scheduleinsert" parameterType="ScheduleDto">
		INSERT INTO SCHEDULES
		(SCHEDULE_ID, MOZZLE_ID, WRITER, TITLE, CONTENT,
		SCHEDULE_DATE,
		REGDATE)
		VALUES(SCHEDULE_SEQ.NEXTVAL,
		#{mozzle_id} , #{writer},
		#{title},
		#{content}, #{schedule_date},
		SYSDATE)
	</insert>

	<!-- 일정 상세보기 -->
	<select id="scheduleselectOne" parameterType="Integer"
		resultType="ScheduleDto">
		SELECT SCHEDULE_ID ,MOZZLE_ID ,WRITER ,TITLE ,CONTENT
		,SCHEDULE_DATE ,REGDATE
		FROM SCHEDULES s
		WHERE SCHEDULE_ID =
		#{schedule_id}
	</select>

	<!-- 일정 변경 -->
	<update id="scheduleupdate" parameterType="ScheduleDto">
		UPDATE SCHEDULES
		SET
		TITLE=#{title},CONTENT=#{content},SCHEDULE_DATE={schedule_date},REGDATE
		=SYSDATE
		WHERE SCHEDULE_ID = #{schedule_id}
	</update>

	<!-- 일정삭제(delete) -->
	<delete id="scheduledelete" parameterType="java.util.Map">
		DELETE FROM SCHEDULES WHERE SCHEDULE_ID IN
		<foreach collection="schedule_ids" item="schedule_id" open="("
			close=")" separator=",">
			#{schedule_id}
		</foreach>
	</delete>

	<!-- 일정개수 -->
	<select id="schedulecount" parameterType="java.util.Map"
		resultType="Integer">
		SELECT COUNT(*)
		FROM SCHEDULES
		WHERE MOZZLE_ID = #{mozzle_id}
		AND SUBSTR(SCHEDULE_DATE,1,8) = #{yyyyMMdd}
	</select>


	<!-- 일정리스트(개수보여주기) -->
	<select id="scheduleselectViewAll" parameterType="java.util.Map"
		resultType="ScheduleDto">
		SELECT
		SD, SCHEDULE_ID, MOZZLE_ID, WRITER, TITLE, CONTENT,
		SCHEDULE_DATE,REGDATE
		FROM(SELECT
		ROW_NUMBER()
		OVER(PARTITION BY
		SUBSTR(SCHEDULE_DATE,1,8) ORDER BY
		SCHEDULE_DATE) AS SD,
		SCHEDULE_ID,
		MOZZLE_ID, WRITER, TITLE, CONTENT,
		SCHEDULE_DATE,REGDATE
		FROM SCHEDULES s
		WHERE MOZZLE_ID = #{mozzle_id} AND SUBSTR(schedule_date,1,6) = #{yyyyMM})
		WHERE
		SD BETWEEN 1 AND 3
	</select>


</mapper>