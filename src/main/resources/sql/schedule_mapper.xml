<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mozzle.web.Schedule">

	<!-- 일정리스트 -->
	<select id="scheduleselectAll" resultType="ScheduleDto">
		SELECT
		S.SCHEDULE_ID,S.WRITER,S.TITLE,S.CONTENT,
		S.SCHEDULE_DATE ,S.REGDATE,
		si.ADDRESS
		FROM SCHEDULES S
		INNER JOIN SCHEDULE_INFO si
		ON
		S.LOCATION_CODE = si.LOCATION_CODE
	</select>

	<!-- 일정추가 -->
	<insert id="scheduleinsert" parameterType="ScheduleDto">
		INSERT INTO
		SCHEDULE_INFO
		(LOCATION_CODE ,LOCATION_NAME ,ADDRESS ,ADDRESS2 ,PHONE
		,LOGUI ,LAT)
		VALUES(SCHEDULE_INFO_SEQ.NEXTVAL,#{location_name},#{address},#{address2},#{phone},#{logui},#{lat});

		INSERT INTO SCHEDULES
		(SCHEDULE_ID, MOZZLE_ID, WRITER, TITLE, CONTENT,
		SCHEDULE_DATE, REGDATE, DELFLAG,
		LOCATION_CODE)
		VALUES(SCHEDULE_SEQ.NEXTVAL, #{mozzle_id} , #{writer}, #{title},
		#{content}, #{schedule_date}, SYSDATE, 'N',
		#{location_code})
	</insert>

	<!-- 일정개수 -->
	<select id="schedulecount" parameterType="java.util.Map">
		SELECT NVL(COUNT(*),0)
		FROM SCHEDULES
		WHERE SCHEDULE_DATE = #{schedule_date}
	</select>

	<!-- 일정리스트(개수보여주기) -->
	<select id="scheduleselectViewAll" parameterType="java.util.Map">
		SELECT
		SCHEDULE_ID, WRITER, TITLE, CONTENT,
		SCHEDULE_DATE,REGDATE,LOCATION_CODE
		FROM(SELECT ROW_NUMBER() OVER(PARTITION BY SUBSTR(SCHEDULE_DATE,1,8) ORDER BY
		SCHEDULE_DATE) RN,
		SCHEDULE_ID, WRITER, TITLE, CONTENT,
		SCHEDULE_DATE,REGDATE,LOCATION_CODE
		FROM SCHEDULES s
		WHERE SCHEDULE_DATE = #{schedule_date})
		WHERE RN BETWEEN 1 AND 3;
	</select>
	<!-- 일정 상세보기 -->
	<select id="scheduleselectOne" parameterType="java.util.Map">
		SELECT
		S.SCHEDULE_ID,S.WRITER,S.TITLE,S.CONTENT,
		S.SCHEDULE_DATE ,S.REGDATE,
		si.LOCATION_NAME, si.ADDRESS, si.ADDRESS2,
		si.PHONE
		FROM SCHEDULES S
		INNER JOIN SCHEDULE_INFO si
		ON S.LOCATION_CODE = si.LOCATION_CODE
		WHERE
		SCHEDULE_ID = #{schedule_id}
	</select>

	<!-- 일정 변경 -->
	<update id="scheduleupdate" parameterType="ScheduleDto">
		UPDATE SCHEDULES
		SET
		TITLE=#{title},
		CONTENT=#{content},SCHEDULE_DATE=#{schedule_date}
		WHERE
		SCHEDULE_ID = #{schedule_id}
	</update>

	<!-- 일정삭제(delflag) -->
	<update id="scheduledeflag" parameterType="ScheduleDto">
		UPDATE SCHEDULES SET
		DELFLAG ='Y'
		WHERE SCHEDULE_ID = #{schedule_id}
	</update>

	<!-- 일정삭제(delete) -->
	<delete id="scheduledelete" parameterType="ScheduleDto">
		DELETE FROM SCHEDULES
		WHERE SCHEDULE_ID =
		#{schedule_id}
	</delete>


</mapper>